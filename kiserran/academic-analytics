{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kiserran/academic-analytics/blob/main/kiserran/academic-analytics\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oyVGO1bH1V6U"
      },
      "source": [
        "##   Logistic regression for bank data\n",
        "### The dataset comes from the UCI Machine Learning repository, and it is related to direct\n",
        "### marketing campaigns (phone calls) of a Portuguese banking institution. The\n",
        "### classification goal is to predict whether the client will subscribe (1/0) to a term deposit\n",
        "### (variable y). The dataset provides the bank customers’ information. It includes 41,188 records and 21 fields.\n",
        "### Input variables\n",
        "1. age (numeric)\n",
        "2. job : type of job (categorical: “admin”, “blue-collar”, “entrepreneur”, “housemaid”,\n",
        "“management”, “retired”, “self-employed”, “services”, “student”, “technician”,\n",
        "“unemployed”, “unknown”)\n",
        "3. marital : marital status (categorical: “divorced”, “married”, “single”, “unknown”)\n",
        "4. education (categorical: “basic.4y”, “basic.6y”, “basic.9y”, “high.school”, “illiterate”,\n",
        "“professional.course”, “university.degree”, “unknown”)\n",
        "5. default: has credit in default? (categorical: “no”, “yes”, “unknown”)\n",
        "6. housing: has housing loan? (categorical: “no”, “yes”, “unknown”)\n",
        "7. loan: has personal loan? (categorical: “no”, “yes”, “unknown”)\n",
        "8. contact: contact communication type (categorical: “cellular”, “telephone”)\n",
        "9. month: last contact month of year (categorical: “jan”, “feb”, “mar”, …, “nov”, “dec”)\n",
        "10. day_of_week: last contact day of the week (categorical: “mon”, “tue”, “wed”, “thu”,\n",
        "“fri”)\n",
        "11. duration: last contact duration, in seconds (numeric). Important note: this attribute\n",
        "highly affects the output target (e.g., if duration=0 then y=’no’). The duration is not\n",
        "known before a call is performed, also, after the end of the call, y is obviously\n",
        "known. Thus, this input should only be included for benchmark purposes and should\n",
        "be discarded if the intention is to have a realistic predictive model\n",
        "12. campaign: number of contacts performed during this campaign and for this client\n",
        "(numeric, includes last contact)\n",
        "13. pdays: number of days that passed by after the client was last contacted from a\n",
        "previous campaign (numeric; 999 means client was not previously contacted)\n",
        "14. previous: number of contacts performed before this campaign and for this client\n",
        "(numeric)\n",
        "15. poutcome: outcome of the previous marketing campaign (categorical: “failure”,\n",
        "“nonexistent”, “success”)\n",
        "16. emp.var.rate: employment variation rate — (numeric)\n",
        "17. cons.price.idx: consumer price index — (numeric)\n",
        "18. cons.conf.idx: consumer confidence index — (numeric)\n",
        "19. euribor3m: euribor 3 month rate — (numeric)\n",
        "20. nr.employed: number of employees — (numeric)\n",
        "Predict variable (desired target):\n",
        "y — has the client subscribed a term deposit? (binary: “1”, means “Yes”, “0” means “No”)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pGvWluQW1V6W"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn import preprocessing\n",
        "import matplotlib.pyplot as plt\n",
        "plt.rc(\"font\", size=14)\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import train_test_split\n",
        "import seaborn as sns\n",
        "sns.set(style=\"white\")\n",
        "sns.set(style=\"whitegrid\", color_codes=True)\n",
        "\n",
        "from warnings import simplefilter\n",
        "simplefilter(action='ignore', category=FutureWarning)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8QunFjMj1V6X",
        "outputId": "6bef67c8-45ae-4cfe-e50f-167f639eae1f"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "(41188, 21)\n",
            "['age', 'job', 'marital', 'education', 'default', 'housing', 'loan', 'contact', 'month', 'day_of_week', 'duration', 'campaign', 'pdays', 'previous', 'poutcome', 'emp_var_rate', 'cons_price_idx', 'cons_conf_idx', 'euribor3m', 'nr_employed', 'y']\n"
          ]
        }
      ],
      "source": [
        "bank=pd.read_csv('https://raw.githubusercontent.com/wangx346/MAS651/main/banking.csv', header=0)\n",
        "bank=bank.dropna()\n",
        "print(bank.shape)\n",
        "print(list(bank.columns))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hd3rttNj1V6Y",
        "outputId": "97390949-9542-4041-cb96-e3edd40481c5"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>job</th>\n",
              "      <th>marital</th>\n",
              "      <th>education</th>\n",
              "      <th>default</th>\n",
              "      <th>housing</th>\n",
              "      <th>loan</th>\n",
              "      <th>contact</th>\n",
              "      <th>month</th>\n",
              "      <th>day_of_week</th>\n",
              "      <th>...</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>poutcome</th>\n",
              "      <th>emp_var_rate</th>\n",
              "      <th>cons_price_idx</th>\n",
              "      <th>cons_conf_idx</th>\n",
              "      <th>euribor3m</th>\n",
              "      <th>nr_employed</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>0</td>\n",
              "      <td>44</td>\n",
              "      <td>blue-collar</td>\n",
              "      <td>married</td>\n",
              "      <td>basic.4y</td>\n",
              "      <td>unknown</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>aug</td>\n",
              "      <td>thu</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>1.4</td>\n",
              "      <td>93.444</td>\n",
              "      <td>-36.1</td>\n",
              "      <td>4.963</td>\n",
              "      <td>5228.1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>53</td>\n",
              "      <td>technician</td>\n",
              "      <td>married</td>\n",
              "      <td>unknown</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>nov</td>\n",
              "      <td>fri</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>93.200</td>\n",
              "      <td>-42.0</td>\n",
              "      <td>4.021</td>\n",
              "      <td>5195.8</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>28</td>\n",
              "      <td>management</td>\n",
              "      <td>single</td>\n",
              "      <td>university.degree</td>\n",
              "      <td>no</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>jun</td>\n",
              "      <td>thu</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>success</td>\n",
              "      <td>-1.7</td>\n",
              "      <td>94.055</td>\n",
              "      <td>-39.8</td>\n",
              "      <td>0.729</td>\n",
              "      <td>4991.6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>39</td>\n",
              "      <td>services</td>\n",
              "      <td>married</td>\n",
              "      <td>high.school</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>apr</td>\n",
              "      <td>fri</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>93.075</td>\n",
              "      <td>-47.1</td>\n",
              "      <td>1.405</td>\n",
              "      <td>5099.1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>4</td>\n",
              "      <td>55</td>\n",
              "      <td>retired</td>\n",
              "      <td>married</td>\n",
              "      <td>basic.4y</td>\n",
              "      <td>no</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>aug</td>\n",
              "      <td>fri</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>success</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>92.201</td>\n",
              "      <td>-31.4</td>\n",
              "      <td>0.869</td>\n",
              "      <td>5076.2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   age          job  marital          education  default housing loan  \\\n",
              "0   44  blue-collar  married           basic.4y  unknown     yes   no   \n",
              "1   53   technician  married            unknown       no      no   no   \n",
              "2   28   management   single  university.degree       no     yes   no   \n",
              "3   39     services  married        high.school       no      no   no   \n",
              "4   55      retired  married           basic.4y       no     yes   no   \n",
              "\n",
              "    contact month day_of_week  ...  campaign  pdays  previous     poutcome  \\\n",
              "0  cellular   aug         thu  ...         1    999         0  nonexistent   \n",
              "1  cellular   nov         fri  ...         1    999         0  nonexistent   \n",
              "2  cellular   jun         thu  ...         3      6         2      success   \n",
              "3  cellular   apr         fri  ...         2    999         0  nonexistent   \n",
              "4  cellular   aug         fri  ...         1      3         1      success   \n",
              "\n",
              "  emp_var_rate  cons_price_idx  cons_conf_idx  euribor3m  nr_employed  y  \n",
              "0          1.4          93.444          -36.1      4.963       5228.1  0  \n",
              "1         -0.1          93.200          -42.0      4.021       5195.8  0  \n",
              "2         -1.7          94.055          -39.8      0.729       4991.6  1  \n",
              "3         -1.8          93.075          -47.1      1.405       5099.1  0  \n",
              "4         -2.9          92.201          -31.4      0.869       5076.2  1  \n",
              "\n",
              "[5 rows x 21 columns]"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Jj035BpP1V6Y",
        "outputId": "a38c9afe-a135-4f8c-8b3b-d75b153a7fa0"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array(['basic.4y', 'unknown', 'university.degree', 'high.school',\n",
              "       'basic.9y', 'professional.course', 'basic.6y', 'illiterate'],\n",
              "      dtype=object)"
            ]
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank['education'].unique()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mLi5wwoZ1V6Y"
      },
      "source": [
        "The education column of the dataset has many categories and I need to reduce the categories for a better modelling.\n",
        "Let us group “basic.4y”, “basic.9y” and “basic.6y” together and call them “basic”."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "G_4UTQQT1V6Z"
      },
      "outputs": [],
      "source": [
        "bank['education']=np.where(bank['education'] =='basic.9y', 'Basic',\n",
        "bank['education'])\n",
        "bank['education']=np.where(bank['education'] =='basic.6y', 'Basic',\n",
        "bank['education'])\n",
        "bank['education']=np.where(bank['education'] =='basic.4y', 'Basic',\n",
        "bank['education'])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "22BpqpMo1V6Z"
      },
      "source": [
        "After grouping, this is the columns:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "A3IsuAQy1V6Z",
        "outputId": "717f70d3-8ed1-471e-b499-0f01721911c5"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array(['Basic', 'unknown', 'university.degree', 'high.school',\n",
              "       'professional.course', 'illiterate'], dtype=object)"
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank['education'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NuvmKyLr1V6Z",
        "outputId": "df0e2edb-626a-4821-81f5-75e804f0ad61"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "0    36548\n",
              "1     4640\n",
              "Name: y, dtype: int64"
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank['y'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3-nW1J-X1V6a",
        "outputId": "9539499f-a869-412e-b1ff-780859929416"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.countplot(x='y',data=bank, palette='hls')\n",
        "plt.show()\n",
        "plt.savefig('count_plot')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kpfgD6Cg1V6a",
        "outputId": "33a70782-eb94-48fb-e714-ec4c449a2325"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "percentage of no subscription is 88.73458288821988\n",
            "percentage of subscription 11.265417111780131\n"
          ]
        }
      ],
      "source": [
        "count_no_sub = len(bank[bank['y']==0])\n",
        "count_sub = len(bank[bank['y']==1])\n",
        "pct_of_no_sub = count_no_sub/(count_no_sub+count_sub)\n",
        "print(\"percentage of no subscription is\", pct_of_no_sub*100)\n",
        "pct_of_sub = count_sub/(count_no_sub+count_sub)\n",
        "print(\"percentage of subscription\", pct_of_sub*100)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fBdQH0f21V6a",
        "outputId": "1ebc08cd-9bd2-4870-9279-bf1df8a14cb9"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>emp_var_rate</th>\n",
              "      <th>cons_price_idx</th>\n",
              "      <th>cons_conf_idx</th>\n",
              "      <th>euribor3m</th>\n",
              "      <th>nr_employed</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>y</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>0</td>\n",
              "      <td>39.911185</td>\n",
              "      <td>220.844807</td>\n",
              "      <td>2.633085</td>\n",
              "      <td>984.113878</td>\n",
              "      <td>0.132374</td>\n",
              "      <td>0.248875</td>\n",
              "      <td>93.603757</td>\n",
              "      <td>-40.593097</td>\n",
              "      <td>3.811491</td>\n",
              "      <td>5176.166600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>40.913147</td>\n",
              "      <td>553.191164</td>\n",
              "      <td>2.051724</td>\n",
              "      <td>792.035560</td>\n",
              "      <td>0.492672</td>\n",
              "      <td>-1.233448</td>\n",
              "      <td>93.354386</td>\n",
              "      <td>-39.789784</td>\n",
              "      <td>2.123135</td>\n",
              "      <td>5095.115991</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         age    duration  campaign       pdays  previous  emp_var_rate  \\\n",
              "y                                                                        \n",
              "0  39.911185  220.844807  2.633085  984.113878  0.132374      0.248875   \n",
              "1  40.913147  553.191164  2.051724  792.035560  0.492672     -1.233448   \n",
              "\n",
              "   cons_price_idx  cons_conf_idx  euribor3m  nr_employed  \n",
              "y                                                         \n",
              "0       93.603757     -40.593097   3.811491  5176.166600  \n",
              "1       93.354386     -39.789784   2.123135  5095.115991  "
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank.groupby('y').mean()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "al4XDngh1V6a"
      },
      "source": [
        "# Observations:\n",
        "- The average age of customers who bought the term deposit is higher than that of the\n",
        "customers who didn’t.\n",
        "- The pdays (days since the customer was last contacted) is understandably lower for\n",
        "the customers who bought it. The lower the pdays, the better the memory of the last\n",
        "call and hence the better chances of a sale.\n",
        "- Surprisingly, campaigns (number of contacts or calls made during the current\n",
        "campaign) are lower for customers who bought the term deposit."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5FBbQyJ41V6a",
        "outputId": "39bbb471-bc57-4cc9-85e5-2098f40d59a3"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>emp_var_rate</th>\n",
              "      <th>cons_price_idx</th>\n",
              "      <th>cons_conf_idx</th>\n",
              "      <th>euribor3m</th>\n",
              "      <th>nr_employed</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>job</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>admin.</td>\n",
              "      <td>38.187296</td>\n",
              "      <td>254.312128</td>\n",
              "      <td>2.623489</td>\n",
              "      <td>954.319229</td>\n",
              "      <td>0.189023</td>\n",
              "      <td>0.015563</td>\n",
              "      <td>93.534054</td>\n",
              "      <td>-40.245433</td>\n",
              "      <td>3.550274</td>\n",
              "      <td>5164.125350</td>\n",
              "      <td>0.129726</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>blue-collar</td>\n",
              "      <td>39.555760</td>\n",
              "      <td>264.542360</td>\n",
              "      <td>2.558461</td>\n",
              "      <td>985.160363</td>\n",
              "      <td>0.122542</td>\n",
              "      <td>0.248995</td>\n",
              "      <td>93.656656</td>\n",
              "      <td>-41.375816</td>\n",
              "      <td>3.771996</td>\n",
              "      <td>5175.615150</td>\n",
              "      <td>0.068943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>entrepreneur</td>\n",
              "      <td>41.723214</td>\n",
              "      <td>263.267857</td>\n",
              "      <td>2.535714</td>\n",
              "      <td>981.267170</td>\n",
              "      <td>0.138736</td>\n",
              "      <td>0.158723</td>\n",
              "      <td>93.605372</td>\n",
              "      <td>-41.283654</td>\n",
              "      <td>3.791120</td>\n",
              "      <td>5176.313530</td>\n",
              "      <td>0.085165</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>housemaid</td>\n",
              "      <td>45.500000</td>\n",
              "      <td>250.454717</td>\n",
              "      <td>2.639623</td>\n",
              "      <td>960.579245</td>\n",
              "      <td>0.137736</td>\n",
              "      <td>0.433396</td>\n",
              "      <td>93.676576</td>\n",
              "      <td>-39.495283</td>\n",
              "      <td>4.009645</td>\n",
              "      <td>5179.529623</td>\n",
              "      <td>0.100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>management</td>\n",
              "      <td>42.362859</td>\n",
              "      <td>257.058140</td>\n",
              "      <td>2.476060</td>\n",
              "      <td>962.647059</td>\n",
              "      <td>0.185021</td>\n",
              "      <td>-0.012688</td>\n",
              "      <td>93.522755</td>\n",
              "      <td>-40.489466</td>\n",
              "      <td>3.611316</td>\n",
              "      <td>5166.650513</td>\n",
              "      <td>0.112175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>retired</td>\n",
              "      <td>62.027326</td>\n",
              "      <td>273.712209</td>\n",
              "      <td>2.476744</td>\n",
              "      <td>897.936047</td>\n",
              "      <td>0.327326</td>\n",
              "      <td>-0.698314</td>\n",
              "      <td>93.430786</td>\n",
              "      <td>-38.573081</td>\n",
              "      <td>2.770066</td>\n",
              "      <td>5122.262151</td>\n",
              "      <td>0.252326</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>self-employed</td>\n",
              "      <td>39.949331</td>\n",
              "      <td>264.142153</td>\n",
              "      <td>2.660802</td>\n",
              "      <td>976.621393</td>\n",
              "      <td>0.143561</td>\n",
              "      <td>0.094159</td>\n",
              "      <td>93.559982</td>\n",
              "      <td>-40.488107</td>\n",
              "      <td>3.689376</td>\n",
              "      <td>5170.674384</td>\n",
              "      <td>0.104856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>services</td>\n",
              "      <td>37.926430</td>\n",
              "      <td>258.398085</td>\n",
              "      <td>2.587805</td>\n",
              "      <td>979.974049</td>\n",
              "      <td>0.154951</td>\n",
              "      <td>0.175359</td>\n",
              "      <td>93.634659</td>\n",
              "      <td>-41.290048</td>\n",
              "      <td>3.699187</td>\n",
              "      <td>5171.600126</td>\n",
              "      <td>0.081381</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>student</td>\n",
              "      <td>25.894857</td>\n",
              "      <td>283.683429</td>\n",
              "      <td>2.104000</td>\n",
              "      <td>840.217143</td>\n",
              "      <td>0.524571</td>\n",
              "      <td>-1.408000</td>\n",
              "      <td>93.331613</td>\n",
              "      <td>-40.187543</td>\n",
              "      <td>1.884224</td>\n",
              "      <td>5085.939086</td>\n",
              "      <td>0.314286</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>technician</td>\n",
              "      <td>38.507638</td>\n",
              "      <td>250.232241</td>\n",
              "      <td>2.577339</td>\n",
              "      <td>964.408127</td>\n",
              "      <td>0.153789</td>\n",
              "      <td>0.274566</td>\n",
              "      <td>93.561471</td>\n",
              "      <td>-39.927569</td>\n",
              "      <td>3.820401</td>\n",
              "      <td>5175.648391</td>\n",
              "      <td>0.108260</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>unemployed</td>\n",
              "      <td>39.733728</td>\n",
              "      <td>249.451677</td>\n",
              "      <td>2.564103</td>\n",
              "      <td>935.316568</td>\n",
              "      <td>0.199211</td>\n",
              "      <td>-0.111736</td>\n",
              "      <td>93.563781</td>\n",
              "      <td>-40.007594</td>\n",
              "      <td>3.466583</td>\n",
              "      <td>5157.156509</td>\n",
              "      <td>0.142012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>unknown</td>\n",
              "      <td>45.563636</td>\n",
              "      <td>239.675758</td>\n",
              "      <td>2.648485</td>\n",
              "      <td>938.727273</td>\n",
              "      <td>0.154545</td>\n",
              "      <td>0.357879</td>\n",
              "      <td>93.718942</td>\n",
              "      <td>-38.797879</td>\n",
              "      <td>3.949033</td>\n",
              "      <td>5172.931818</td>\n",
              "      <td>0.112121</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                     age    duration  campaign       pdays  previous  \\\n",
              "job                                                                    \n",
              "admin.         38.187296  254.312128  2.623489  954.319229  0.189023   \n",
              "blue-collar    39.555760  264.542360  2.558461  985.160363  0.122542   \n",
              "entrepreneur   41.723214  263.267857  2.535714  981.267170  0.138736   \n",
              "housemaid      45.500000  250.454717  2.639623  960.579245  0.137736   \n",
              "management     42.362859  257.058140  2.476060  962.647059  0.185021   \n",
              "retired        62.027326  273.712209  2.476744  897.936047  0.327326   \n",
              "self-employed  39.949331  264.142153  2.660802  976.621393  0.143561   \n",
              "services       37.926430  258.398085  2.587805  979.974049  0.154951   \n",
              "student        25.894857  283.683429  2.104000  840.217143  0.524571   \n",
              "technician     38.507638  250.232241  2.577339  964.408127  0.153789   \n",
              "unemployed     39.733728  249.451677  2.564103  935.316568  0.199211   \n",
              "unknown        45.563636  239.675758  2.648485  938.727273  0.154545   \n",
              "\n",
              "               emp_var_rate  cons_price_idx  cons_conf_idx  euribor3m  \\\n",
              "job                                                                     \n",
              "admin.             0.015563       93.534054     -40.245433   3.550274   \n",
              "blue-collar        0.248995       93.656656     -41.375816   3.771996   \n",
              "entrepreneur       0.158723       93.605372     -41.283654   3.791120   \n",
              "housemaid          0.433396       93.676576     -39.495283   4.009645   \n",
              "management        -0.012688       93.522755     -40.489466   3.611316   \n",
              "retired           -0.698314       93.430786     -38.573081   2.770066   \n",
              "self-employed      0.094159       93.559982     -40.488107   3.689376   \n",
              "services           0.175359       93.634659     -41.290048   3.699187   \n",
              "student           -1.408000       93.331613     -40.187543   1.884224   \n",
              "technician         0.274566       93.561471     -39.927569   3.820401   \n",
              "unemployed        -0.111736       93.563781     -40.007594   3.466583   \n",
              "unknown            0.357879       93.718942     -38.797879   3.949033   \n",
              "\n",
              "               nr_employed         y  \n",
              "job                                   \n",
              "admin.         5164.125350  0.129726  \n",
              "blue-collar    5175.615150  0.068943  \n",
              "entrepreneur   5176.313530  0.085165  \n",
              "housemaid      5179.529623  0.100000  \n",
              "management     5166.650513  0.112175  \n",
              "retired        5122.262151  0.252326  \n",
              "self-employed  5170.674384  0.104856  \n",
              "services       5171.600126  0.081381  \n",
              "student        5085.939086  0.314286  \n",
              "technician     5175.648391  0.108260  \n",
              "unemployed     5157.156509  0.142012  \n",
              "unknown        5172.931818  0.112121  "
            ]
          },
          "execution_count": 12,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank.groupby('job').mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lLKMBs2q1V6b",
        "outputId": "589839d9-82da-4bcd-8db2-f9c88b9babc7"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>emp_var_rate</th>\n",
              "      <th>cons_price_idx</th>\n",
              "      <th>cons_conf_idx</th>\n",
              "      <th>euribor3m</th>\n",
              "      <th>nr_employed</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>marital</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>divorced</td>\n",
              "      <td>44.899393</td>\n",
              "      <td>253.790330</td>\n",
              "      <td>2.61340</td>\n",
              "      <td>968.639853</td>\n",
              "      <td>0.168690</td>\n",
              "      <td>0.163985</td>\n",
              "      <td>93.606563</td>\n",
              "      <td>-40.707069</td>\n",
              "      <td>3.715603</td>\n",
              "      <td>5170.878643</td>\n",
              "      <td>0.103209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>married</td>\n",
              "      <td>42.307165</td>\n",
              "      <td>257.438623</td>\n",
              "      <td>2.57281</td>\n",
              "      <td>967.247673</td>\n",
              "      <td>0.155608</td>\n",
              "      <td>0.183625</td>\n",
              "      <td>93.597367</td>\n",
              "      <td>-40.270659</td>\n",
              "      <td>3.745832</td>\n",
              "      <td>5171.848772</td>\n",
              "      <td>0.101573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>single</td>\n",
              "      <td>33.158714</td>\n",
              "      <td>261.524378</td>\n",
              "      <td>2.53380</td>\n",
              "      <td>949.909578</td>\n",
              "      <td>0.211359</td>\n",
              "      <td>-0.167989</td>\n",
              "      <td>93.517300</td>\n",
              "      <td>-40.918698</td>\n",
              "      <td>3.317447</td>\n",
              "      <td>5155.199265</td>\n",
              "      <td>0.140041</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>unknown</td>\n",
              "      <td>40.275000</td>\n",
              "      <td>312.725000</td>\n",
              "      <td>3.18750</td>\n",
              "      <td>937.100000</td>\n",
              "      <td>0.275000</td>\n",
              "      <td>-0.221250</td>\n",
              "      <td>93.471250</td>\n",
              "      <td>-40.820000</td>\n",
              "      <td>3.313038</td>\n",
              "      <td>5157.393750</td>\n",
              "      <td>0.150000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                age    duration  campaign       pdays  previous  emp_var_rate  \\\n",
              "marital                                                                         \n",
              "divorced  44.899393  253.790330   2.61340  968.639853  0.168690      0.163985   \n",
              "married   42.307165  257.438623   2.57281  967.247673  0.155608      0.183625   \n",
              "single    33.158714  261.524378   2.53380  949.909578  0.211359     -0.167989   \n",
              "unknown   40.275000  312.725000   3.18750  937.100000  0.275000     -0.221250   \n",
              "\n",
              "          cons_price_idx  cons_conf_idx  euribor3m  nr_employed         y  \n",
              "marital                                                                    \n",
              "divorced       93.606563     -40.707069   3.715603  5170.878643  0.103209  \n",
              "married        93.597367     -40.270659   3.745832  5171.848772  0.101573  \n",
              "single         93.517300     -40.918698   3.317447  5155.199265  0.140041  \n",
              "unknown        93.471250     -40.820000   3.313038  5157.393750  0.150000  "
            ]
          },
          "execution_count": 13,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank.groupby('marital').mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qh_yb0U01V6b",
        "outputId": "bb0adce1-e1fb-4605-99ba-7888c44cd740"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>emp_var_rate</th>\n",
              "      <th>cons_price_idx</th>\n",
              "      <th>cons_conf_idx</th>\n",
              "      <th>euribor3m</th>\n",
              "      <th>nr_employed</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>education</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>Basic</td>\n",
              "      <td>42.163910</td>\n",
              "      <td>263.043874</td>\n",
              "      <td>2.559498</td>\n",
              "      <td>974.877967</td>\n",
              "      <td>0.141053</td>\n",
              "      <td>0.191329</td>\n",
              "      <td>93.639933</td>\n",
              "      <td>-40.927595</td>\n",
              "      <td>3.729654</td>\n",
              "      <td>5172.014113</td>\n",
              "      <td>0.087029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>high.school</td>\n",
              "      <td>37.998213</td>\n",
              "      <td>260.886810</td>\n",
              "      <td>2.568576</td>\n",
              "      <td>964.358382</td>\n",
              "      <td>0.185917</td>\n",
              "      <td>0.032937</td>\n",
              "      <td>93.584857</td>\n",
              "      <td>-40.940641</td>\n",
              "      <td>3.556157</td>\n",
              "      <td>5164.994735</td>\n",
              "      <td>0.108355</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>illiterate</td>\n",
              "      <td>48.500000</td>\n",
              "      <td>276.777778</td>\n",
              "      <td>2.277778</td>\n",
              "      <td>943.833333</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>-0.133333</td>\n",
              "      <td>93.317333</td>\n",
              "      <td>-39.950000</td>\n",
              "      <td>3.516556</td>\n",
              "      <td>5171.777778</td>\n",
              "      <td>0.222222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>professional.course</td>\n",
              "      <td>40.080107</td>\n",
              "      <td>252.533855</td>\n",
              "      <td>2.586115</td>\n",
              "      <td>960.765974</td>\n",
              "      <td>0.163075</td>\n",
              "      <td>0.173012</td>\n",
              "      <td>93.569864</td>\n",
              "      <td>-40.124108</td>\n",
              "      <td>3.710457</td>\n",
              "      <td>5170.155979</td>\n",
              "      <td>0.113485</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>university.degree</td>\n",
              "      <td>38.879191</td>\n",
              "      <td>253.223373</td>\n",
              "      <td>2.563527</td>\n",
              "      <td>951.807692</td>\n",
              "      <td>0.192390</td>\n",
              "      <td>-0.028090</td>\n",
              "      <td>93.493466</td>\n",
              "      <td>-39.975805</td>\n",
              "      <td>3.529663</td>\n",
              "      <td>5163.226298</td>\n",
              "      <td>0.137245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>unknown</td>\n",
              "      <td>43.481225</td>\n",
              "      <td>262.390526</td>\n",
              "      <td>2.596187</td>\n",
              "      <td>942.830734</td>\n",
              "      <td>0.226459</td>\n",
              "      <td>0.059099</td>\n",
              "      <td>93.658615</td>\n",
              "      <td>-39.877816</td>\n",
              "      <td>3.571098</td>\n",
              "      <td>5159.549509</td>\n",
              "      <td>0.145003</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                           age    duration  campaign       pdays  previous  \\\n",
              "education                                                                    \n",
              "Basic                42.163910  263.043874  2.559498  974.877967  0.141053   \n",
              "high.school          37.998213  260.886810  2.568576  964.358382  0.185917   \n",
              "illiterate           48.500000  276.777778  2.277778  943.833333  0.111111   \n",
              "professional.course  40.080107  252.533855  2.586115  960.765974  0.163075   \n",
              "university.degree    38.879191  253.223373  2.563527  951.807692  0.192390   \n",
              "unknown              43.481225  262.390526  2.596187  942.830734  0.226459   \n",
              "\n",
              "                     emp_var_rate  cons_price_idx  cons_conf_idx  euribor3m  \\\n",
              "education                                                                     \n",
              "Basic                    0.191329       93.639933     -40.927595   3.729654   \n",
              "high.school              0.032937       93.584857     -40.940641   3.556157   \n",
              "illiterate              -0.133333       93.317333     -39.950000   3.516556   \n",
              "professional.course      0.173012       93.569864     -40.124108   3.710457   \n",
              "university.degree       -0.028090       93.493466     -39.975805   3.529663   \n",
              "unknown                  0.059099       93.658615     -39.877816   3.571098   \n",
              "\n",
              "                     nr_employed         y  \n",
              "education                                   \n",
              "Basic                5172.014113  0.087029  \n",
              "high.school          5164.994735  0.108355  \n",
              "illiterate           5171.777778  0.222222  \n",
              "professional.course  5170.155979  0.113485  \n",
              "university.degree    5163.226298  0.137245  \n",
              "unknown              5159.549509  0.145003  "
            ]
          },
          "execution_count": 14,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank.groupby('education').mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gEejslWl1V6b",
        "outputId": "f0e390ab-c85b-433e-cc57-7115312822a9"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "%matplotlib inline\n",
        "pd.crosstab(bank.job,bank.y).plot(kind='bar')\n",
        "plt.title('Purchase Frequency for Job Title')\n",
        "plt.xlabel('Job')\n",
        "plt.ylabel('Frequency of Purchase')\n",
        "plt.savefig('purchase_fre_job')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZxYqMkf11V6b"
      },
      "source": [
        "The above plot shows the frequency of purchase of the deposit depends a great deal on the job title."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6LkM3U681V6b",
        "outputId": "c80415be-d89f-4840-f11d-fc6d9227c628"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "table=pd.crosstab(bank.marital,bank.y)\n",
        "table.div(table.sum(1).astype(float), axis=0).plot(kind='bar',\n",
        "stacked=True)\n",
        "plt.title('Stacked Bar Chart of Marital Status vs Purchase')\n",
        "plt.xlabel('Marital Status')\n",
        "plt.ylabel('Proportion of Customers')\n",
        "plt.savefig('mariral_vs_pur_stack')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "t1DcEosH1V6b"
      },
      "source": [
        "The marital status does not seem a strong predictor for the outcome variable."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7g7zqJJx1V6b",
        "outputId": "5247053f-a4bc-4eb8-cda6-832b37da482b"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "table=pd.crosstab(bank.education,bank.y)\n",
        "table.div(table.sum(1).astype(float), axis=0).plot(kind='bar',\n",
        "stacked=True)\n",
        "plt.title('Stacked Bar Chart of Education vs Purchase')\n",
        "plt.xlabel('Education')\n",
        "plt.ylabel('Proportion of Customers')\n",
        "plt.savefig('edu_vs_pur_stack')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "u1RIu_wN1V6b",
        "outputId": "1ebf9ab8-3da0-45d7-edbc-87941d0d8dc1"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "pd.crosstab(bank.day_of_week,bank.y).plot(kind='bar')\n",
        "plt.title('Purchase Frequency for Day of Week')\n",
        "plt.xlabel('Day of Week')\n",
        "plt.ylabel('Frequency of Purchase')\n",
        "plt.savefig('pur_dayofweek_bar')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Ksufm3R81V6b",
        "outputId": "6bf7b368-a8b7-48a4-f252-5fe77afdd5a9"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "pd.crosstab(bank.month,bank.y).plot(kind='bar')\n",
        "plt.title('Purchase Frequency for Month')\n",
        "plt.xlabel('Month')\n",
        "plt.ylabel('Frequency of Purchase')\n",
        "plt.savefig('pur_fre_month_bar')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hXMTlM6-1V6b",
        "outputId": "d6fe2908-781d-45d3-8da8-2b33399b615d"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "bank.age.hist()\n",
        "plt.title('Histogram of Age')\n",
        "plt.xlabel('Age')\n",
        "plt.ylabel('Frequency')\n",
        "plt.savefig('hist_age')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TJNK6H6t1V6c",
        "outputId": "afe3bd27-e243-4fec-998a-f602d55d748f"
      },
      "outputs": [
        {
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "pd.crosstab(bank.poutcome,bank.y).plot(kind='bar')\n",
        "plt.title('Purchase Frequency for Poutcome')\n",
        "plt.xlabel('Poutcome')\n",
        "plt.ylabel('Frequency of Purchase')\n",
        "plt.savefig('pur_fre_pout_bar')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6vGTiXpL1V6c"
      },
      "source": [
        "## Create dummy variables\n",
        "A dummy variable is variables with only two values, zero and one. <br>\n",
        "<a> href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.get_dummies.html\" >Link to document on creating dummy variables</a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hP8HmmK21V6c"
      },
      "outputs": [],
      "source": [
        "cat_vars=['job','marital','education','default','housing','loan','contact','month','day_of_week','poutcome']\n",
        "for var in cat_vars:\n",
        "    cat_list='var'+'_'+var\n",
        "    cat_list = pd.get_dummies(bank[var], prefix=var)\n",
        "    bank1=bank.join(cat_list)\n",
        "    bank=bank1\n",
        "\n",
        "cat_vars=['job','marital','education','default','housing','loan','contact','month','day_of_week','poutcome']\n",
        "bank_vars=bank.columns.values.tolist()\n",
        "to_keep=[i for i in bank_vars if i not in cat_vars]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DCHxLqfJ1V6c",
        "outputId": "ab257b35-c2df-46d8-95e5-696746a705f0"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array(['age', 'duration', 'campaign', 'pdays', 'previous', 'emp_var_rate',\n",
              "       'cons_price_idx', 'cons_conf_idx', 'euribor3m', 'nr_employed', 'y',\n",
              "       'job_admin.', 'job_blue-collar', 'job_entrepreneur',\n",
              "       'job_housemaid', 'job_management', 'job_retired',\n",
              "       'job_self-employed', 'job_services', 'job_student',\n",
              "       'job_technician', 'job_unemployed', 'job_unknown',\n",
              "       'marital_divorced', 'marital_married', 'marital_single',\n",
              "       'marital_unknown', 'education_Basic', 'education_high.school',\n",
              "       'education_illiterate', 'education_professional.course',\n",
              "       'education_university.degree', 'education_unknown', 'default_no',\n",
              "       'default_unknown', 'default_yes', 'housing_no', 'housing_unknown',\n",
              "       'housing_yes', 'loan_no', 'loan_unknown', 'loan_yes',\n",
              "       'contact_cellular', 'contact_telephone', 'month_apr', 'month_aug',\n",
              "       'month_dec', 'month_jul', 'month_jun', 'month_mar', 'month_may',\n",
              "       'month_nov', 'month_oct', 'month_sep', 'day_of_week_fri',\n",
              "       'day_of_week_mon', 'day_of_week_thu', 'day_of_week_tue',\n",
              "       'day_of_week_wed', 'poutcome_failure', 'poutcome_nonexistent',\n",
              "       'poutcome_success'], dtype=object)"
            ]
          },
          "execution_count": 22,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "bank_final=bank[to_keep]\n",
        "bank_final.columns.values"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vnuAiIuq1V6c"
      },
      "source": [
        "# Implementing the model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "v4ucOh9S1V6c"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "m8PiJbV01V6c"
      },
      "outputs": [],
      "source": [
        "X = bank_final[['euribor3m', 'job_blue-collar', 'job_housemaid','marital_unknown', 'education_illiterate', 'month_apr', 'month_aug', 'month_dec', 'month_jul','month_jun', 'month_mar', 'month_may', 'month_nov',\n",
        "               'month_oct', \"poutcome_failure\", \"poutcome_success\"]]\n",
        "y = bank_final.loc[:, bank_final.columns == 'y']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "b5Xmcmhj1V6c"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8X5lHCzm1V6c",
        "outputId": "29981f3f-df5c-4a85-ec15-b3a2182c87b9"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Optimization terminated successfully.\n",
            "         Current function value: 0.280722\n",
            "         Iterations 7\n",
            "                           Results: Logit\n",
            "=====================================================================\n",
            "Model:                Logit             Pseudo R-squared:  0.197     \n",
            "Dependent Variable:   y                 AIC:               16219.0070\n",
            "Date:                 2022-01-25 21:38  BIC:               16351.3143\n",
            "No. Observations:     28831             Log-Likelihood:    -8093.5   \n",
            "Df Model:             15                LL-Null:           -10079.   \n",
            "Df Residuals:         28815             LLR p-value:       0.0000    \n",
            "Converged:            1.0000            Scale:             1.0000    \n",
            "No. Iterations:       7.0000                                         \n",
            "---------------------------------------------------------------------\n",
            "                      Coef.  Std.Err.    z     P>|z|   [0.025  0.975]\n",
            "---------------------------------------------------------------------\n",
            "euribor3m            -0.5416   0.0149 -36.3807 0.0000 -0.5708 -0.5125\n",
            "job_blue-collar      -0.2175   0.0573  -3.7966 0.0001 -0.3297 -0.1052\n",
            "job_housemaid        -0.0416   0.1395  -0.2985 0.7653 -0.3150  0.2318\n",
            "marital_unknown       0.1604   0.4368   0.3673 0.7134 -0.6957  1.0165\n",
            "education_illiterate  0.9960   0.7986   1.2472 0.2123 -0.5692  2.5613\n",
            "month_apr            -0.5786   0.0664  -8.7077 0.0000 -0.7088 -0.4484\n",
            "month_aug            -0.2570   0.0757  -3.3967 0.0007 -0.4053 -0.1087\n",
            "month_dec             0.1623   0.1887   0.8599 0.3899 -0.2076  0.5321\n",
            "month_jul             0.0915   0.0818   1.1186 0.2633 -0.0688  0.2518\n",
            "month_jun            -0.1495   0.0778  -1.9226 0.0545 -0.3019  0.0029\n",
            "month_mar             0.5532   0.1092   5.0675 0.0000  0.3392  0.7671\n",
            "month_may            -1.2106   0.0572 -21.1673 0.0000 -1.3227 -1.0985\n",
            "month_nov            -0.3734   0.0860  -4.3423 0.0000 -0.5419 -0.2048\n",
            "month_oct             0.0676   0.1041   0.6497 0.5159 -0.1364  0.2716\n",
            "poutcome_failure     -0.4441   0.0626  -7.0965 0.0000 -0.5668 -0.3215\n",
            "poutcome_success      1.5585   0.0794  19.6187 0.0000  1.4028  1.7142\n",
            "=====================================================================\n",
            "\n"
          ]
        }
      ],
      "source": [
        "import statsmodels.api as sm\n",
        "logit_model=sm.Logit(y_train,X_train)\n",
        "result=logit_model.fit()\n",
        "print(result.summary2())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7VCwR91d1V6c"
      },
      "source": [
        "### Predicting the test set results and calculating the accuracy"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "K5uUudnn1V6c",
        "outputId": "39dc6c02-4f2c-425f-cff3-a919acc3f16a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Accuracy of logistic regression classifier on test set: 0.90\n"
          ]
        }
      ],
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn import metrics\n",
        "logreg = LogisticRegression()\n",
        "logreg.fit(X_train, y_train.values.ravel())\n",
        "y_pred = logreg.predict(X_test)\n",
        "print('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logreg.score(X_test, y_test)))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VK_UKML61V6c"
      },
      "source": [
        "### Confusion Matrix\n",
        "The result is telling us that we have 10803+265 correct predictions and 1161+128\n",
        "incorrect predictions."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "OPiPvbEg1V6c",
        "outputId": "ea29eb8f-9fa4-45d3-f67d-b4e594a4e7c2"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[[10803   128]\n",
            " [ 1161   265]]\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "confusion_matrix = confusion_matrix(y_test, y_pred)\n",
        "print(confusion_matrix)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z44pQexz1V6c"
      },
      "source": [
        "### Compute precision, recall, F-measure and support\n",
        "To quote from Scikit Learn:\n",
        "- The precision is the ratio tp / (tp + fp) where tp is the number of true positives and fp\n",
        "the number of false positives. The precision is intuitively the ability of the classifier to not\n",
        "label a sample as positive if it is negative.\n",
        "- The recall is the ratio tp / (tp + fn) where tp is the number of true positives and fn the\n",
        "number of false negatives. The recall is intuitively the ability of the classifier to find all\n",
        "the positive samples.\n",
        "- The F-beta score can be interpreted as a weighted harmonic mean of the precision and\n",
        "recall, where an F-beta score reaches its best value at 1 and worst score at 0.\n",
        "The F-beta score weights the recall more than the precision by a factor of beta. beta =\n",
        "1.0 means recall and precision are equally important.\n",
        "- The support is the number of occurrences of each class in y_test."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_CKevBBQ1V6h",
        "outputId": "5154255d-c496-4f80-f736-6194836529e2"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.90      0.99      0.94     10931\n",
            "           1       0.67      0.19      0.29      1426\n",
            "\n",
            "    accuracy                           0.90     12357\n",
            "   macro avg       0.79      0.59      0.62     12357\n",
            "weighted avg       0.88      0.90      0.87     12357\n",
            "\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import classification_report\n",
        "print(classification_report(y_test, y_pred))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HfUCcAFf1V6i"
      },
      "source": [
        "### ROC Curve\n",
        "The receiver operating characteristic (ROC) curve is another common tool used with binary classifiers. The dotted line represents the ROC curve of a purely random classifier; a good classifier stays as far away from that line as possible (toward the top-left corner)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_69DeQUk1V6i",
        "outputId": "43bb4223-4ee5-448a-edec-48e6266e7f0e"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "from sklearn.metrics import roc_auc_score\n",
        "from sklearn.metrics import roc_curve\n",
        "logit_roc_auc = roc_auc_score(y_test, logreg.predict(X_test))\n",
        "fpr, tpr, thresholds = roc_curve(y_test, logreg.predict_proba(X_test)\n",
        "[:,1])\n",
        "plt.figure()\n",
        "plt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' %\n",
        "logit_roc_auc)\n",
        "plt.plot([0, 1], [0, 1],'r--')\n",
        "plt.xlim([0.0, 1.0])\n",
        "plt.ylim([0.0, 1.05])\n",
        "plt.xlabel('False Positive Rate')\n",
        "plt.ylabel('True Positive Rate')\n",
        "plt.title('Receiver operating characteristic')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.savefig('Log_ROC')\n",
        "plt.show()"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.12"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}